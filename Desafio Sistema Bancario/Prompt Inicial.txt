Preciso que verifique o código abaixo e faça alguma verificações e modificações separe as funções existentes de saque, deposito e extrato em funções. Crie duas novas funções: cadastrar usuário (ciente) e cadastrar conta bancária.
Ajuste o códgio abaixo mantendo os inputs para teste, ajuste de modo mais simples, enxuto, com comentários no código e sigas as regras descritas.

#Sistema atual do Banco
menu = """

[d] Depositar
[s] Sacar
[e] Extrato
[q] Sair

=> """

saldo = 0
limite = 500
extrato = ""
numero_saques = 0
LIMITE_SAQUES = 3

while True:

    opcao = input(menu)

    if opcao == "d":
        valor = float(input("Informe o valor do depósito: "))

        if valor > 0:
            saldo += valor
            extrato += f"Depósito: R$ {valor:.2f}\n"

        else:
            print("Operação falhou! O valor informado é inválido.")

    elif opcao == "s":
        valor = float(input("Informe o valor do saque: "))

        excedeu_saldo = valor > saldo

        excedeu_limite = valor > limite

        excedeu_saques = numero_saques >= LIMITE_SAQUES

        if excedeu_saldo:
            print("Operação falhou! Você não tem saldo suficiente.")

        elif excedeu_limite:
            print("Operação falhou! O valor do saque excede o limite.")

        elif excedeu_saques:
            print("Operação falhou! Número máximo de saques excedido.")

        elif valor > 0:
            saldo -= valor
            extrato += f"Saque: R$ {valor:.2f}\n"
            numero_saques += 1

        else:
            print("Operação falhou! O valor informado é inválido.")

    elif opcao == "e":
        print("\n================ EXTRATO ================")
        print("Não foram realizadas movimentações." if not extrato else extrato)
        print(f"\nSaldo: R$ {saldo:.2f}")
        print("==========================================")

    elif opcao == "q":
        break

    else:
        print("Operação inválida, por favor selecione novamente a operação desejada.")

{REGRAS}
> Função de saque deve recebre argumentos apenas por nome (keyword only). Os agumentos: saldo, valor, extrato, limite, numero_saques, limite_saques. Retorno: saldo e extrato.
   - Quando não houver conta, solicitar a criação para poder fazer o saque.
   - Solicitar agencia e conta do usuário.
   - Após um saque mostrar o saldo entre deposito e saque.
   - O valor do saque não pode ser maior do que tem em saldo.
> Função de depósito deve receber os argumenos apenas por posição (positional only). Argumentos: saldo, valor, extrato. Retorno: saldo e extrato.
   - Quando não houver conta, solicitar a criação para poder fazer o depósito.
   - Solicitar agencia e conta do usuário.
> Função de extrato deve receber aos argumentos por posição e nome (positional only e keyword only). Argumentos posicionais: saldo, argumentos nomeados: extrato.
   - Quando não houver conta, solicitar a criação para poder exibir o extrato.
   - Solicitação de extrato, tem que pedir o numero da agencia e conta.
> Novas funções precisa criar duas novas funções: criar usuário e cirar conta corrente.
   - Crie uma input para visualizar as contas cadastradas
   - Crie uma input para visualizar as usuário cadastrado
> Função criar conta de usuário, deve armazenar em uma lista usuário é composto por:
   - nome, data de nascimento, cpf e endereço
   - O endereço é uma string como o formato: logradouro, nro, bairro, cidade/estado(sigla)
   - Deve ser armazenado os números do CPF
   - Não pode cadastrar dois usuários com o mesmo CPF.
> Função criar conta corrente, deve armazenar contas em uma lista:
   - uma conta é composta por: agencia, numero da conta e usuario
   - O número da conta é sequencial, iniciando em 1
   - O número da agência é fixo: "0001"
   - O usuário pode ter mais de uma conta, mas uma conta pertence a somente um susuário.
> Para vincular um usuário a uma conta, filtre a lista de usuários buscando o número do CPF informado para cada usuário da lista.